name: Power Warning

on:
  push:
    branches: [ main ]
  schedule:
    # 每三个小时执行一次
    - cron: '0 0/3 * * *'

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    env:
      COOKIE: ${{ secrets.COOKIE }}
      FROM: ${{ secrets.FROM }}
      TO:    ${{ secrets.TO }}
      SECRET: ${{ secrets.SECRET }}

    steps:
    - name: Checkout code main branch
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20' 

    - name: Run application
      id: run-go-program
      continue-on-error: true
      run: |
        echo "exit-code=1" >> $GITHUB_OUTPUT
        echo ${steps.run-go-program.outputs.exit-code}
        go mod tidy
        go run main.go
        exit_code=$?
        echo "exit-code=$exit_code" >> $GITHUB_OUTPUT
        echo steps.run-go-program.outputs.exit-code
    
    - name: Checkout code failure branch
      uses: actions/checkout@v3
      with:
        ref: failure

    - name: Handle API failure
      if: steps.run-go-program.outputs.exit-code != 0
      run: |
        ls -al ./*
        current_date_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
        echo "Current Date and Time (UTC+8): $current_date_time"

        last_line=$(tail -n 1 ./failure/api_error.log)
        last_date_time=$(echo "$last_line" | awk '{print $1}')

        if [ -z "$last_date_time" ]; then
          echo "File is empty, appending the first entry."
          echo "$current_date_time" >> ./failure/api_error.log
        else
          current_date=$(echo "$current_date_time" | cut -d' ' -f1)
          last_date=$(echo "$last_date_time" | cut -d' ' -f1)

          if [ "$current_date" != "$last_date" ]; then
            echo "Appending new date and time with a newline."
            echo "" >> ./failure/api_error.log 
            echo "$current_date_time" >> ./failure/api_error.log
          else
            echo "Appending new time."
            echo "$current_date_time" >> ./failure/api_error.log
          fi
        fi

    - name: Push Error log to the failure branch
      if: steps.run-go-program.outputs.exit-code != 0
      uses: crazy-max/ghaction-github-pages@v3.1.0
      with:
        target_branch: failure
        build_dir: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
